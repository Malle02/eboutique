security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
         
            access_denied_handler: App\Security\AccessDeniedHandler
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                target: home
                # success_handler:  App\Security\LogoutHandler
                

                

    # access_control:
    #     - { path: ^/cart, roles: ROLE_USER }
    #     - { path: ^/order, roles: ROLE_USER }
    #     # - { path: ^/$, roles: ROLE_USER }
    #     - { path: ^/admin, roles: ROLE_ADMIN }

  
    role_hierarchy:
        # Supprimez toute hiérarchie entre ROLE_ADMIN et ROLE_USER
    
    access_control:
        - { path: ^/cart, roles: ROLE_USER }
        - { path: ^/order, roles: ROLE_USER }
        - { path: ^/mon-compte, roles: ROLE_USER }
        - { path: ^/admin, roles: ROLE_ADMIN }
        # Interdire l'accès au frontend pour les admins
        - { path: ^/, roles: [IS_AUTHENTICATED_ANONYMOUSLY, ROLE_USER], allow_if: "!is_granted('ROLE_ADMIN')" }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
